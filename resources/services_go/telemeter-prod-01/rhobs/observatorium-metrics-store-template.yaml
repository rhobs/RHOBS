apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: observatorium-metrics-store
objects:
- apiVersion: v1
  data:
    entrypoint.sh: "#!/bin/bash\n\n# Kubernetes replicas are named with the following
      convention \"<statefulset-name>-<ordinal>\". \n# This parameter expansion removes
      all characters until the last hyphen, capturing only the ordinal.\nexport ORDINAL_INDEX=${HOSTNAME##*-}\n\n#
      Logging parameters\necho \"generating store hashmod config with ORDINAL_INDEX=${ORDINAL_INDEX}
      THANOS_STORE_REPLICAS=${THANOS_STORE_REPLICAS} HOSTNAME=${HOSTNAME}\"\n\ncat
      <<EOF >/tmp/config/hashmod-config.yaml\n- action: hashmod\n    source_labels:
      [\"__block_id\"]\n    target_label: shard\n    modulus: ${THANOS_STORE_REPLICAS}\n-
      action: keep\n    source_labels: [\"shard\"]\n    regex: ${ORDINAL_INDEX}\nEOF\n"
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: object-store-gateway
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-store
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: v0.32.3
    name: hashmod-config-template
    namespace: rhobs
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: object-store-gateway
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-store
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: v0.32.3
    name: observatorium-thanos-store
    namespace: rhobs
  spec:
    ports:
    - name: http
      port: 10902
      protocol: TCP
      targetPort: 10902
    selector:
      app.kubernetes.io/component: object-store-gateway
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-store
      app.kubernetes.io/part-of: observatorium
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: object-store-gateway
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-store
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: v0.32.3
    name: observatorium-thanos-store
    namespace: rhobs
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: object-store-gateway
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-store
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: v0.32.3
    name: observatorium-thanos-store
    namespace: openshift-monitoring
  spec:
    endpoints:
    - port: http
      relabelings:
      - action: replace
        separator: /
        sourceLabels:
        - namespace
        - pod
        targetLabel: instance
    namespaceSelector:
      matchNames:
      - rhobs
    selector:
      matchLabels:
        app.kubernetes.io/component: object-store-gateway
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: thanos-store
        app.kubernetes.io/part-of: observatorium
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: object-store-gateway
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-store
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: v0.32.3
    name: observatorium-thanos-store
    namespace: rhobs
  spec:
    replicas: 3
    selector:
      matchLabels:
        app.kubernetes.io/component: object-store-gateway
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: thanos-store
        app.kubernetes.io/part-of: observatorium
    serviceName: observatorium-thanos-store
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: object-store-gateway
          app.kubernetes.io/instance: observatorium
          app.kubernetes.io/name: thanos-store
          app.kubernetes.io/part-of: observatorium
          app.kubernetes.io/version: v0.32.3
        namespace: rhobs
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - thanos-store
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                    - observatorium
                namespaces:
                - observatorium
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - store
          - --data-dir=/var/thanos/store
          - --ignore-deletion-marks-delay=24h0m0s
          - |
            --index-cache.config=type: REDIS
            config:
              addr: rhobs-redis.rhobs.svc.cluster.local:6379
          - --log.format=logfmt
          - --log.level=warn
          - --max-time=-22h0m0s
          - --objstore.config=$(OBJSTORE_CONFIG)
          - --selector.relabel-config-file=/tmp/config/hashmod-config.yaml
          - --store.enable-index-header-lazy-reader=true
          env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: aws_access_key_id
                name: rhobs-thanos-s3
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: aws_secret_access_key
                name: rhobs-thanos-s3
          - name: OBJSTORE_CONFIG
            valueFrom:
              secretKeyRef:
                key: thanos.yaml
                name: rhobs-thanos-objectstorage
          image: quay.io/thanos/thanos:v0.32.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /-/healthy
              port: 10902
            periodSeconds: 30
            timeoutSeconds: 1
          name: thanos
          ports:
          - containerPort: 10902
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /-/ready
              port: 10902
            periodSeconds: 5
          resources:
            limits:
              memory: 80Gi
            requests:
              cpu: "4"
              memory: 20Gi
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/thanos/store
            name: data
          - mountPath: /etc/config
            name: hashmod-config
        - args:
          - --reporter.grpc.host-port=dns:///jaeger-collector-headless.observatorium-tools.svc:14250
          - --reporter.type=grpc
          - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          image: quay.io/app-sre/jaegertracing-jaeger-agent:1.22.0
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 14271
          name: jaeger-agent
          ports:
          - containerPort: 5778
            name: configs
            protocol: TCP
          - containerPort: 6831
            name: jaeger-thrift
            protocol: TCP
          - containerPort: 14271
            name: metrics
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 14271
            initialDelaySeconds: 1
          resources:
            limits:
              cpu: 128m
              memory: 128Mi
            requests:
              cpu: 32m
              memory: 64Mi
          terminationMessagePolicy: FallbackToLogsOnError
        initContainers:
        - args:
          - /tmp/entrypoint/entrypoint.sh
          env:
          - name: THANOS_STORE_REPLICAS
            value: "3"
          image: quay.io/app-sre/ubi8-ubi
          imagePullPolicy: IfNotPresent
          name: init-hashmod-file
          resources: {}
          volumeMounts:
          - mountPath: /tmp/entrypoint
            name: hashmod-config-template
          - mountPath: /etc/config
            name: hashmod-config
        nodeSelector:
          kubernetes.io/os: linux
        securityContext:
          fsGroup: 65534
          runAsUser: 65534
        serviceAccountName: observatorium-thanos-store
        terminationGracePeriodSeconds: 120
        volumes:
        - configMap:
            defaultMode: 511
            name: thanos-store
          name: hashmod-config-template
        - emptyDir: {}
          name: hashmod-config
    updateStrategy: {}
    volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: object-store-gateway
          app.kubernetes.io/instance: observatorium
          app.kubernetes.io/name: thanos-store
          app.kubernetes.io/part-of: observatorium
          app.kubernetes.io/version: v0.32.3
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 500Gi
        storageClassName: gp2
      status: {}
  status:
    availableReplicas: 0
    replicas: 0
