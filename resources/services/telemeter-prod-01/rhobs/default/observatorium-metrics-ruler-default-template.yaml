apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: observatorium-thanos-ruler-default
objects:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      cert-manager.io/issuer-kind: ClusterIssuer
      cert-manager.io/issuer-name: letsencrypt-prod-http
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: rule-evaluation-engine
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-rule
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: v0.32.4
      observatorium/tenant: default
    name: observatorium-thanos-ruler-default
    namespace: rhobs
  spec:
    host: ""
    port:
      targetPort: https
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: reencrypt
    to:
      kind: Service
      name: observatorium-thanos-ruler-default
      weight: null
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: ruler-tls
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: rule-evaluation-engine
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-rule
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: v0.32.4
      observatorium/tenant: default
    name: observatorium-thanos-ruler-default
    namespace: rhobs
  spec:
    ports:
    - name: http
      port: 10902
      protocol: TCP
      targetPort: 10902
    - name: grpc
      port: 10901
      protocol: TCP
      targetPort: 10901
    - name: internal
      port: 8083
      protocol: TCP
      targetPort: 8083
    - name: https
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app.kubernetes.io/component: rule-evaluation-engine
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-rule
      app.kubernetes.io/part-of: observatorium
      observatorium/tenant: default
- apiVersion: v1
  imagePullSecrets:
  - name: quay.io
  kind: ServiceAccount
  metadata:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.application: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"observatorium-thanos-ruler-default"}}'
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: rule-evaluation-engine
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-rule
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: v0.32.4
      observatorium/tenant: default
    name: observatorium-thanos-ruler-default
    namespace: rhobs
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: rule-evaluation-engine
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-rule
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: v0.32.4
      observatorium/tenant: default
      prometheus: app-sre
    name: observatorium-thanos-ruler-default
    namespace: openshift-customer-monitoring
  spec:
    endpoints:
    - port: http
      relabelings:
      - action: replace
        separator: /
        sourceLabels:
        - namespace
        - pod
        targetLabel: instance
    - port: internal
      relabelings:
      - action: replace
        separator: /
        sourceLabels:
        - namespace
        - pod
        targetLabel: instance
    namespaceSelector:
      matchNames:
      - rhobs
    selector:
      matchLabels:
        app.kubernetes.io/component: rule-evaluation-engine
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: thanos-rule
        app.kubernetes.io/part-of: observatorium
        observatorium/tenant: default
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: rule-evaluation-engine
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: thanos-rule
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: v0.32.4
      observatorium/tenant: default
    name: observatorium-thanos-ruler-default
    namespace: rhobs
  spec:
    replicas: ${{REPLICAS}}
    selector:
      matchLabels:
        app.kubernetes.io/component: rule-evaluation-engine
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: thanos-rule
        app.kubernetes.io/part-of: observatorium
        observatorium/tenant: default
    serviceName: observatorium-thanos-ruler-default
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: rule-evaluation-engine
          app.kubernetes.io/instance: observatorium
          app.kubernetes.io/name: thanos-rule
          app.kubernetes.io/part-of: observatorium
          app.kubernetes.io/version: v0.32.4
          observatorium/tenant: default
        namespace: rhobs
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                    - observatorium
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - thanos-rule
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - rule
          - --alert.label-drop=rule_replica
          - --data-dir=/var/thanos/ruler
          - --label=rule_replica="$(NAME)"
          - --log.format=logfmt
          - --log.level=${LOG_LEVEL}
          - --objstore.config=$(OBJSTORE_CONFIG)
          - --query=http://observatorium-thanos-query-rule.rhobs.svc.cluster.local:10902
          - --rule-file=/etc/thanos/rules/synced-rules/observatorium.yaml
          - |
            --tracing.config=type: JAEGER
            config:
              service_name: thanos-rule
              sampler_type: ratelimiting
              sampler_param: 2
          - --tsdb.retention=2d
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: aws_access_key_id
                name: default-tenant-s3
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: aws_secret_access_key
                name: default-tenant-s3
          - name: OBJ_STORE_BUCKET
            valueFrom:
              secretKeyRef:
                key: bucket
                name: default-tenant-s3
          - name: OBJ_STORE_REGION
            valueFrom:
              secretKeyRef:
                key: aws_region
                name: default-tenant-s3
          - name: OBJ_STORE_ENDPOINT
            valueFrom:
              secretKeyRef:
                key: endpoint
                name: default-tenant-s3
          - name: OBJSTORE_CONFIG
            value: |
              type: S3
              config:
                  bucket: $(OBJ_STORE_BUCKET)
                  endpoint: $(OBJ_STORE_ENDPOINT)
                  region: $(OBJ_STORE_REGION)
          image: quay.io/thanos/thanos:v0.32.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /-/healthy
              port: 10902
            periodSeconds: 30
            timeoutSeconds: 1
          name: thanos
          ports:
          - containerPort: 10902
            name: http
            protocol: TCP
          - containerPort: 10901
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /-/ready
              port: 10902
            periodSeconds: 5
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/thanos/ruler
            name: data
          - mountPath: /etc/thanos/rules/synced-rules
            name: rule-syncer
            readOnly: true
        - args:
          - -file=/etc/thanos-rule-syncer/observatorium.yaml
          - -interval=60
          - -rules-backend-url=http://observatorium-rules-objstore.rhobs.svc.cluster.local:10902
          - -thanos-rule-url=127.0.0.1:10902
          image: quay.io/observatorium/thanos-rule-syncer:main-2022-09-14-338f9ec
          name: observatorium-rules-syncer
          ports:
          - containerPort: 8083
            name: internal
            protocol: TCP
          resources:
            limits:
              cpu: 128m
              memory: 128Mi
            requests:
              cpu: 32m
              memory: 64Mi
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/thanos-rule-syncer
            name: rule-syncer
        - args:
          - -volume-dir=/etc/thanos-rule-syncer
          - -webhook-url=http://localhost:10902/-/reload
          image: 'quay.io/openshift/origin-configmap-reloader:4.5.0:'
          name: configmap-reloader
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/thanos/rules/observatorium-rules
            name: observatorium-rules
        - args:
          - -provider=openshift
          - -https-address=:8443
          - -http-address=
          - -email-domain=*
          - -upstream=http://localhost:10902
          - -openshift-service-account=observatorium-thanos-ruler-default
          - '-openshift-sar={"resource": "namespaces", "verb": "get", "name": "rhobs",
            "namespace": "rhobs"}'
          - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get",
            "name": "rhobs", "namespace": "rhobs"}}'
          - -tls-cert=/etc/tls/private/tls.crt
          - -tls-key=/etc/tls/private/tls.key
          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
          - -cookie-secret=${OAUTH_PROXY_COOKIE_SECRET}
          - -openshift-ca=/etc/pki/tls/cert.pem
          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          image: quay.io/openshift/origin-oauth-proxy:4.15
          name: oauth-proxy
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: tls
            readOnly: true
        - args:
          - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
          - --reporter.type=grpc
          - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          image: quay.io/app-sre/jaegertracing-jaeger-agent:1.22.0
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 14271
          name: jaeger-agent
          ports:
          - containerPort: 5778
            name: configs
            protocol: TCP
          - containerPort: 6831
            name: jaeger-thrift
            protocol: TCP
          - containerPort: 14271
            name: metrics
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 14271
            initialDelaySeconds: 1
          resources:
            limits:
              cpu: 128m
              memory: 128Mi
            requests:
              cpu: 32m
              memory: 64Mi
          terminationMessagePolicy: FallbackToLogsOnError
        nodeSelector:
          kubernetes.io/os: linux
        serviceAccountName: observatorium-thanos-ruler-default
        terminationGracePeriodSeconds: 120
        volumes:
        - emptyDir: {}
          name: rule-syncer
        - name: tls
          secret:
            secretName: ruler-tls
    updateStrategy: {}
    volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: rule-evaluation-engine
          app.kubernetes.io/instance: observatorium
          app.kubernetes.io/name: thanos-rule
          app.kubernetes.io/part-of: observatorium
          app.kubernetes.io/version: v0.32.4
          observatorium/tenant: default
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
        storageClassName: ""
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: rules-storage
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: rules-objstore
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: ""
    name: observatorium-rules-objstore
    namespace: observatorium
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: rules-storage
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: rules-objstore
        app.kubernetes.io/part-of: observatorium
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: rules-storage
          app.kubernetes.io/instance: observatorium
          app.kubernetes.io/name: rules-objstore
          app.kubernetes.io/part-of: observatorium
          app.kubernetes.io/version: ""
        namespace: observatorium
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                    - observatorium
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - rules-objstore
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -log.format=logfmt
          - -log.level=warn
          image: 'quay.io/observatorium/rules-objstore:'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /live
              port: 8081
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: thanos
          ports:
          - containerPort: 8081
            name: internal
            protocol: TCP
          - containerPort: 8080
            name: public
            protocol: TCP
          readinessProbe:
            failureThreshold: 12
            httpGet:
              path: /ready
              port: 8081
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 400Mi
            requests:
              cpu: 50m
              memory: 200Mi
          terminationMessagePolicy: FallbackToLogsOnError
        nodeSelector:
          kubernetes.io/os: linux
        serviceAccountName: observatorium-rules-objstore
        terminationGracePeriodSeconds: 120
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: rules-storage
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: rules-objstore
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: ""
    name: observatorium-rules-objstore
    namespace: observatorium
  spec:
    ports:
    - name: internal
      port: 8081
      protocol: TCP
      targetPort: 8081
    - name: public
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/component: rules-storage
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: rules-objstore
      app.kubernetes.io/part-of: observatorium
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: rules-storage
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: rules-objstore
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: ""
    name: observatorium-rules-objstore
    namespace: observatorium
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    creationTimestamp: null
    labels:
      app.kubernetes.io/component: rules-storage
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: rules-objstore
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: ""
    name: observatorium-rules-objstore
    namespace: observatorium
  spec:
    endpoints:
    - port: internal
      relabelings:
      - action: replace
        separator: /
        sourceLabels:
        - namespace
        - pod
        targetLabel: instance
    namespaceSelector: {}
    selector:
      matchLabels:
        app.kubernetes.io/component: rules-storage
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: rules-objstore
        app.kubernetes.io/part-of: observatorium
parameters:
- name: LOG_LEVEL
  value: warn
- name: REPLICAS
  value: "1"
- name: CPU_REQUEST
  value: 100m
- name: MEMORY_LIMIT
  value: 1Gi
- name: MEMORY_REQUEST
  value: 256Mi
- from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: OAUTH_PROXY_COOKIE_SECRET
