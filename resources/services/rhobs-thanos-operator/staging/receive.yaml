apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: thanos-receive
objects:
- apiVersion: monitoring.thanos.io/v1alpha1
  kind: ThanosReceive
  metadata:
    creationTimestamp: null
    name: rhobs
    namespace: rhobs-stage
  spec:
    featureGates:
      serviceMonitor:
        enable: false
    ingesterSpec:
      additionalArgs:
      - |-
        --tracing.config="config":
          "sampler_param": 2
          "sampler_type": "ratelimiting"
          "service_name": "thanos-receive-ingester"
        "type": "JAEGER"
      additionalContainers:
      - args:
        - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
        - --reporter.type=grpc
        - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: registry.redhat.io/rhosdt/jaeger-agent-rhel8:1.57.0-10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 14271
            scheme: HTTP
          initialDelaySeconds: 1
        name: jaeger-agent
        ports:
        - containerPort: 5778
          name: configs
        - containerPort: 6831
          name: jaeger-thrift
        - containerPort: 14271
          name: metrics
        readinessProbe:
          httpGet:
            path: /
            port: 14271
            scheme: HTTP
          initialDelaySeconds: 1
        resources:
          limits:
            cpu: 128m
            memory: 128Mi
          requests:
            cpu: 32m
            memory: 64Mi
      defaultObjectStorageConfig:
        key: thanos.yaml
        name: telemeter-objectstorage
        optional: false
      hashrings:
      - asyncForwardWorkerCount: 50
        externalLabels:
          replica: $(POD_NAME)
        image: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-thanos
        imagePullPolicy: IfNotPresent
        logFormat: logfmt
        logLevel: info
        name: telemeter
        replicas: 6
        resourceRequirements:
          limits:
            cpu: "2"
            memory: 5Gi
          requests:
            cpu: 700m
            memory: 2Gi
        storageSize: 3Gi
        storeLimitsOptions:
          storeLimitsRequestSamples: 627040000
          storeLimitsRequestSeries: 1000000
        tenancyConfig:
          defaultTenantID: FB870BF3-9F3A-44FF-9BF7-D7A047A52F43
          tenantHeader: THANOS-TENANT
          tenantLabelName: tenant_id
          tenantMatcherType: exact
        tooFarInFutureTimeWindow: 5m
        tsdbConfig:
          retention: 4h
        version: c7c3ef94c51d518bb6056d3ad416d7b4f39559f3
      - asyncForwardWorkerCount: 5
        externalLabels:
          replica: $(POD_NAME)
        image: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-thanos
        imagePullPolicy: IfNotPresent
        logFormat: logfmt
        logLevel: info
        name: default
        objectStorageConfig:
          key: thanos.yaml
          name: default-objectstorage
          optional: false
        replicas: 3
        resourceRequirements:
          limits:
            cpu: "2"
            memory: 5Gi
          requests:
            cpu: 700m
            memory: 2Gi
        storageSize: 3Gi
        storeLimitsOptions: {}
        tenancyConfig:
          defaultTenantID: FB870BF3-9F3A-44FF-9BF7-D7A047A52F43
          tenantHeader: THANOS-TENANT
          tenantLabelName: tenant_id
          tenantMatcherType: exact
        tooFarInFutureTimeWindow: 5m
        tsdbConfig:
          retention: 1d
        version: c7c3ef94c51d518bb6056d3ad416d7b4f39559f3
    routerSpec:
      additionalArgs:
      - |-
        --tracing.config="config":
          "sampler_param": 2
          "sampler_type": "ratelimiting"
          "service_name": "thanos-receive-router"
        "type": "JAEGER"
      additionalContainers:
      - args:
        - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
        - --reporter.type=grpc
        - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: registry.redhat.io/rhosdt/jaeger-agent-rhel8:1.57.0-10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 14271
            scheme: HTTP
          initialDelaySeconds: 1
        name: jaeger-agent
        ports:
        - containerPort: 5778
          name: configs
        - containerPort: 6831
          name: jaeger-thrift
        - containerPort: 14271
          name: metrics
        readinessProbe:
          httpGet:
            path: /
            port: 14271
            scheme: HTTP
          initialDelaySeconds: 1
        resources:
          limits:
            cpu: 128m
            memory: 128Mi
          requests:
            cpu: 32m
            memory: 64Mi
      externalLabels:
        receive: "true"
      image: quay.io/redhat-user-workloads/rhobs-mco-tenant/rhobs-thanos
      imagePullPolicy: IfNotPresent
      logFormat: logfmt
      logLevel: info
      replicas: 3
      replicationFactor: 3
      resourceRequirements:
        limits:
          cpu: "2"
          memory: 5Gi
        requests:
          cpu: 700m
          memory: 2Gi
      version: c7c3ef94c51d518bb6056d3ad416d7b4f39559f3
  status: {}
