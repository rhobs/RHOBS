apiVersion: monitoring.thanos.io/v1alpha1
kind: ThanosCompact
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: compact-tls
  creationTimestamp: null
  name: rhobs
  namespace: rhobs-local
spec:
  additionalArgs:
  - |-
    --tracing.config="config":
      "sampler_param": 2
      "sampler_type": "ratelimiting"
      "service_name": "thanos-compact"
    "type": "JAEGER"
  additionalContainers:
  - args:
    - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
    - --reporter.type=grpc
    - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
    env:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: POD
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    image: quay.io/jaegertracing/jaeger-agent:1.57.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    name: jaeger-agent
    ports:
    - containerPort: 5778
      name: configs
    - containerPort: 6831
      name: jaeger-thrift
    - containerPort: 14271
      name: metrics
    readinessProbe:
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    resources:
      limits:
        cpu: 128m
        memory: 128Mi
      requests:
        cpu: 32m
        memory: 64Mi
  baseImage: quay.io/thanos/thanos
  compactConfig:
    compactConcurrency: 1
  debugConfig:
    acceptMalformedIndex: true
    haltOnError: true
    maxCompactionLevel: 3
  downsamplingConfig:
    downsamplingConcurrency: 1
    downsamplingEnabled: false
  featureGates:
    serviceMonitor:
      enable: false
  imagePullPolicy: IfNotPresent
  logFormat: logfmt
  logLevel: info
  objectStorageConfig:
    key: thanos.yaml
    name: observatorium-mst-thanos-objectstorage
    optional: false
  resourceRequirements:
    limits:
      cpu: 20m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 20Mi
  retentionConfig:
    fiveMinutes: 365d
    oneHour: 365d
    raw: 365d
  storageSize: 1Gi
  version: v0.37.2
status: {}
---
apiVersion: monitoring.thanos.io/v1alpha1
kind: ThanosCompact
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: compact-telemeter-tls
  creationTimestamp: null
  name: telemeter
  namespace: rhobs-local
spec:
  additionalArgs:
  - |-
    --tracing.config="config":
      "sampler_param": 2
      "sampler_type": "ratelimiting"
      "service_name": "thanos-compact"
    "type": "JAEGER"
  additionalContainers:
  - args:
    - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
    - --reporter.type=grpc
    - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
    env:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: POD
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    image: quay.io/jaegertracing/jaeger-agent:1.57.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    name: jaeger-agent
    ports:
    - containerPort: 5778
      name: configs
    - containerPort: 6831
      name: jaeger-thrift
    - containerPort: 14271
      name: metrics
    readinessProbe:
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    resources:
      limits:
        cpu: 128m
        memory: 128Mi
      requests:
        cpu: 32m
        memory: 64Mi
  baseImage: quay.io/thanos/thanos
  compactConfig:
    compactConcurrency: 1
  debugConfig:
    acceptMalformedIndex: true
    haltOnError: true
    maxCompactionLevel: 3
  downsamplingConfig:
    downsamplingConcurrency: 1
    downsamplingEnabled: false
  featureGates:
    serviceMonitor:
      enable: false
  imagePullPolicy: IfNotPresent
  logFormat: logfmt
  logLevel: info
  objectStorageConfig:
    key: thanos.yaml
    name: thanos-objectstorage
    optional: false
  resourceRequirements:
    limits:
      cpu: 20m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 20Mi
  retentionConfig:
    fiveMinutes: 365d
    oneHour: 365d
    raw: 365d
  storageSize: 1Gi
  version: v0.37.2
status: {}
---
apiVersion: monitoring.thanos.io/v1alpha1
kind: ThanosQuery
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: query-tls
  creationTimestamp: null
  name: rhobs
  namespace: rhobs-local
spec:
  additionalArgs:
  - |-
    --tracing.config="config":
      "sampler_param": 2
      "sampler_type": "ratelimiting"
      "service_name": "thanos-query"
    "type": "JAEGER"
  additionalContainers:
  - args:
    - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
    - --reporter.type=grpc
    - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
    env:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: POD
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    image: quay.io/jaegertracing/jaeger-agent:1.57.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    name: jaeger-agent
    ports:
    - containerPort: 5778
      name: configs
    - containerPort: 6831
      name: jaeger-thrift
    - containerPort: 14271
      name: metrics
    readinessProbe:
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    resources:
      limits:
        cpu: 128m
        memory: 128Mi
      requests:
        cpu: 32m
        memory: 64Mi
  baseImage: quay.io/thanos/thanos
  customStoreLabelSelector:
    matchLabels:
      app.kubernetes.io/part-of: thanos
      operator.thanos.io/store-api: "true"
  featureGates:
    serviceMonitor:
      enable: false
  grpcProxyStrategy: lazy
  imagePullPolicy: IfNotPresent
  logFormat: logfmt
  logLevel: info
  queryFrontend:
    additionalArgs:
    - |-
      --tracing.config="config":
        "sampler_param": 2
        "sampler_type": "ratelimiting"
        "service_name": "thanos-query-frontend"
      "type": "JAEGER"
    additionalContainers:
    - args:
      - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
      - --reporter.type=grpc
      - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: POD
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      image: quay.io/jaegertracing/jaeger-agent:1.57.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      name: jaeger-agent
      ports:
      - containerPort: 5778
        name: configs
      - containerPort: 6831
        name: jaeger-thrift
      - containerPort: 14271
        name: metrics
      readinessProbe:
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      resources:
        limits:
          cpu: 128m
          memory: 128Mi
        requests:
          cpu: 32m
          memory: 64Mi
    baseImage: quay.io/thanos/thanos
    compressResponses: true
    imagePullPolicy: IfNotPresent
    labelsDefaultTimeRange: 336h
    labelsMaxRetries: 3
    labelsSplitInterval: 48h
    logFormat: logfmt
    logLevel: info
    logQueriesLongerThan: 10s
    queryLabelSelector:
      matchLabels:
        operator.thanos.io/query-api: "true"
    queryRangeMaxRetries: 3
    queryRangeSplitInterval: 48h
    replicas: 3
    resourceRequirements:
      limits:
        cpu: 20m
        memory: 50Mi
      requests:
        cpu: 10m
        memory: 20Mi
    version: v0.37.2
  replicaLabels:
  - prometheus_replica
  - replica
  - rule_replica
  replicas: 6
  resourceRequirements:
    limits:
      cpu: 20m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 20Mi
  telemetryQuantiles:
    duration:
    - "0.1"
    - "0.25"
    - "0.75"
    - "1.25"
    - "1.75"
    - "2.5"
    - "3"
    - "5"
    - "10"
    - "15"
    - "30"
    - "60"
    - "120"
  version: v0.37.2
  webConfig:
    prefixHeader: X-Forwarded-Prefix
status: {}
---
apiVersion: monitoring.thanos.io/v1alpha1
kind: ThanosReceive
metadata:
  creationTimestamp: null
  name: rhobs
  namespace: rhobs-local
spec:
  featureGates:
    serviceMonitor:
      enable: false
  ingesterSpec:
    additionalArgs:
    - |-
      --tracing.config="config":
        "sampler_param": 2
        "sampler_type": "ratelimiting"
        "service_name": "thanos-receive-ingester"
      "type": "JAEGER"
    additionalContainers:
    - args:
      - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
      - --reporter.type=grpc
      - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: POD
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      image: quay.io/jaegertracing/jaeger-agent:1.57.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      name: jaeger-agent
      ports:
      - containerPort: 5778
        name: configs
      - containerPort: 6831
        name: jaeger-thrift
      - containerPort: 14271
        name: metrics
      readinessProbe:
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      resources:
        limits:
          cpu: 128m
          memory: 128Mi
        requests:
          cpu: 32m
          memory: 64Mi
    defaultObjectStorageConfig:
      key: thanos.yaml
      name: thanos-objectstorage
      optional: false
    hashrings:
    - asyncForwardWorkerCount: 50
      baseImage: quay.io/thanos/thanos
      externalLabels:
        replica: $(POD_NAME)
      imagePullPolicy: IfNotPresent
      logFormat: logfmt
      logLevel: info
      name: telemeter
      replicas: 6
      resourceRequirements:
        limits:
          cpu: 20m
          memory: 50Mi
        requests:
          cpu: 10m
          memory: 20Mi
      storageSize: 1Gi
      storeLimitsOptions:
        storeLimitsRequestSamples: 627040000
        storeLimitsRequestSeries: 1000000
      tenancyConfig:
        defaultTenantID: FB870BF3-9F3A-44FF-9BF7-D7A047A52F43
        tenantHeader: THANOS-TENANT
        tenantLabelName: tenant_id
        tenantMatcherType: exact
      tooFarInFutureTimeWindow: 5m
      tsdbConfig:
        retention: 4h
      version: v0.37.2
    - asyncForwardWorkerCount: 5
      baseImage: quay.io/thanos/thanos
      externalLabels:
        replica: $(POD_NAME)
      imagePullPolicy: IfNotPresent
      logFormat: logfmt
      logLevel: info
      name: default
      objectStorageConfig:
        key: thanos.yaml
        name: observatorium-mst-thanos-objectstorage
        optional: false
      replicas: 3
      resourceRequirements:
        limits:
          cpu: 20m
          memory: 50Mi
        requests:
          cpu: 10m
          memory: 20Mi
      storageSize: 1Gi
      storeLimitsOptions: {}
      tenancyConfig:
        defaultTenantID: FB870BF3-9F3A-44FF-9BF7-D7A047A52F43
        tenantHeader: THANOS-TENANT
        tenantLabelName: tenant_id
        tenantMatcherType: exact
      tooFarInFutureTimeWindow: 5m
      tsdbConfig:
        retention: 1d
      version: v0.37.2
  routerSpec:
    additionalArgs:
    - |-
      --tracing.config="config":
        "sampler_param": 2
        "sampler_type": "ratelimiting"
        "service_name": "thanos-receive-router"
      "type": "JAEGER"
    additionalContainers:
    - args:
      - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
      - --reporter.type=grpc
      - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: POD
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      image: quay.io/jaegertracing/jaeger-agent:1.57.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      name: jaeger-agent
      ports:
      - containerPort: 5778
        name: configs
      - containerPort: 6831
        name: jaeger-thrift
      - containerPort: 14271
        name: metrics
      readinessProbe:
        httpGet:
          path: /
          port: 14271
          scheme: HTTP
        initialDelaySeconds: 1
      resources:
        limits:
          cpu: 128m
          memory: 128Mi
        requests:
          cpu: 32m
          memory: 64Mi
    baseImage: quay.io/thanos/thanos
    externalLabels:
      receive: "true"
    imagePullPolicy: IfNotPresent
    logFormat: logfmt
    logLevel: info
    replicas: 3
    replicationFactor: 3
    resourceRequirements:
      limits:
        cpu: 20m
        memory: 50Mi
      requests:
        cpu: 10m
        memory: 20Mi
    version: v0.37.2
status: {}
---
apiVersion: monitoring.thanos.io/v1alpha1
kind: ThanosRuler
metadata:
  creationTimestamp: null
  name: rhobs
  namespace: rhobs-local
spec:
  additionalArgs:
  - |-
    --tracing.config="config":
      "sampler_param": 2
      "sampler_type": "ratelimiting"
      "service_name": "thanos-ruler"
    "type": "JAEGER"
  additionalContainers:
  - args:
    - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
    - --reporter.type=grpc
    - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
    env:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: POD
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    image: quay.io/jaegertracing/jaeger-agent:1.57.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    name: jaeger-agent
    ports:
    - containerPort: 5778
      name: configs
    - containerPort: 6831
      name: jaeger-thrift
    - containerPort: 14271
      name: metrics
    readinessProbe:
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    resources:
      limits:
        cpu: 128m
        memory: 128Mi
      requests:
        cpu: 32m
        memory: 64Mi
  alertLabelDrop:
  - rule_replica
  alertmanagerURL: dnssrv+http://alertmanager-cluster.rhobs-local.svc.cluster.local:9093
  baseImage: quay.io/thanos/thanos
  defaultObjectStorageConfig:
    key: thanos.yaml
    name: observatorium-mst-thanos-objectstorage
    optional: false
  evaluationInterval: 1m
  externalLabels:
    rule_replica: $(NAME)
  featureGates:
    serviceMonitor:
      enable: false
  imagePullPolicy: IfNotPresent
  logFormat: logfmt
  logLevel: info
  paused: true
  prometheusRuleSelector:
    matchLabels:
      operator.thanos.io/prometheus-rule: "true"
  queryLabelSelector:
    matchLabels:
      app.kubernetes.io/part-of: thanos
      operator.thanos.io/query-api: "true"
  replicas: 2
  resourceRequirements:
    limits:
      cpu: 20m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 20Mi
  retention: 48h
  ruleConfigSelector:
    matchLabels:
      operator.thanos.io/rule-file: "true"
  storageSize: 1Gi
  version: v0.37.2
status: {}
---
apiVersion: monitoring.thanos.io/v1alpha1
kind: ThanosStore
metadata:
  creationTimestamp: null
  name: default
  namespace: rhobs-local
spec:
  additionalArgs:
  - |-
    --tracing.config="config":
      "sampler_param": 2
      "sampler_type": "ratelimiting"
      "service_name": "thanos-store"
    "type": "JAEGER"
  additionalContainers:
  - args:
    - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
    - --reporter.type=grpc
    - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
    env:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: POD
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    image: quay.io/jaegertracing/jaeger-agent:1.57.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    name: jaeger-agent
    ports:
    - containerPort: 5778
      name: configs
    - containerPort: 6831
      name: jaeger-thrift
    - containerPort: 14271
      name: metrics
    readinessProbe:
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    resources:
      limits:
        cpu: 128m
        memory: 128Mi
      requests:
        cpu: 32m
        memory: 64Mi
  baseImage: quay.io/thanos/thanos
  blockConfig:
    blockDiscoveryStrategy: concurrent
    blockFilesConcurrency: 1
    blockMetaFetchConcurrency: 32
  featureGates:
    serviceMonitor:
      enable: false
  ignoreDeletionMarksDelay: 24h
  imagePullPolicy: IfNotPresent
  indexHeaderConfig:
    enableLazyReader: true
    lazyDownloadStrategy: lazy
    lazyReaderIdleTimeout: 5m
  logFormat: logfmt
  logLevel: info
  maxTime: -22h
  objectStorageConfig:
    key: thanos.yaml
    name: observatorium-mst-thanos-objectstorage
    optional: false
  replicas: 3
  resourceRequirements:
    limits:
      cpu: 20m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 20Mi
  shardingStrategy:
    shards: 1
    type: block
  storageSize: 1Gi
  storeLimitsOptions: {}
  version: v0.37.2
status: {}
---
apiVersion: monitoring.thanos.io/v1alpha1
kind: ThanosStore
metadata:
  creationTimestamp: null
  name: telemeter-0to2w
  namespace: rhobs-local
spec:
  additionalArgs:
  - |-
    --tracing.config="config":
      "sampler_param": 2
      "sampler_type": "ratelimiting"
      "service_name": "thanos-store"
    "type": "JAEGER"
  additionalContainers:
  - args:
    - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
    - --reporter.type=grpc
    - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
    env:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: POD
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    image: quay.io/jaegertracing/jaeger-agent:1.57.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    name: jaeger-agent
    ports:
    - containerPort: 5778
      name: configs
    - containerPort: 6831
      name: jaeger-thrift
    - containerPort: 14271
      name: metrics
    readinessProbe:
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    resources:
      limits:
        cpu: 128m
        memory: 128Mi
      requests:
        cpu: 32m
        memory: 64Mi
  baseImage: quay.io/thanos/thanos
  blockConfig:
    blockDiscoveryStrategy: concurrent
    blockFilesConcurrency: 1
    blockMetaFetchConcurrency: 32
  featureGates:
    serviceMonitor:
      enable: false
  ignoreDeletionMarksDelay: 24h
  imagePullPolicy: IfNotPresent
  indexHeaderConfig:
    enableLazyReader: true
    lazyDownloadStrategy: lazy
    lazyReaderIdleTimeout: 5m
  logFormat: logfmt
  logLevel: info
  maxTime: -2w
  objectStorageConfig:
    key: thanos.yaml
    name: thanos-objectstorage
    optional: false
  replicas: 3
  resourceRequirements:
    limits:
      cpu: 20m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 20Mi
  shardingStrategy:
    shards: 1
    type: block
  storageSize: 1Gi
  storeLimitsOptions:
    storeLimitsRequestSamples: 627040000
    storeLimitsRequestSeries: 1000000
  version: v0.37.2
status: {}
---
apiVersion: monitoring.thanos.io/v1alpha1
kind: ThanosStore
metadata:
  creationTimestamp: null
  name: telemeter-2wto90d
  namespace: rhobs-local
spec:
  additionalArgs:
  - |-
    --tracing.config="config":
      "sampler_param": 2
      "sampler_type": "ratelimiting"
      "service_name": "thanos-store"
    "type": "JAEGER"
  additionalContainers:
  - args:
    - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
    - --reporter.type=grpc
    - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
    env:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: POD
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    image: quay.io/jaegertracing/jaeger-agent:1.57.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    name: jaeger-agent
    ports:
    - containerPort: 5778
      name: configs
    - containerPort: 6831
      name: jaeger-thrift
    - containerPort: 14271
      name: metrics
    readinessProbe:
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    resources:
      limits:
        cpu: 128m
        memory: 128Mi
      requests:
        cpu: 32m
        memory: 64Mi
  baseImage: quay.io/thanos/thanos
  blockConfig:
    blockDiscoveryStrategy: concurrent
    blockFilesConcurrency: 1
    blockMetaFetchConcurrency: 32
  featureGates:
    serviceMonitor:
      enable: false
  ignoreDeletionMarksDelay: 24h
  imagePullPolicy: IfNotPresent
  indexHeaderConfig:
    enableLazyReader: true
    lazyDownloadStrategy: lazy
    lazyReaderIdleTimeout: 5m
  logFormat: logfmt
  logLevel: info
  maxTime: -90d
  minTime: -2w
  objectStorageConfig:
    key: thanos.yaml
    name: thanos-objectstorage
    optional: false
  replicas: 3
  resourceRequirements:
    limits:
      cpu: 20m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 20Mi
  shardingStrategy:
    shards: 1
    type: block
  storageSize: 1Gi
  storeLimitsOptions:
    storeLimitsRequestSamples: 627040000
    storeLimitsRequestSeries: 1000000
  version: v0.37.2
status: {}
---
apiVersion: monitoring.thanos.io/v1alpha1
kind: ThanosStore
metadata:
  creationTimestamp: null
  name: telemeter-90dplus
  namespace: rhobs-local
spec:
  additionalArgs:
  - |-
    --tracing.config="config":
      "sampler_param": 2
      "sampler_type": "ratelimiting"
      "service_name": "thanos-store"
    "type": "JAEGER"
  additionalContainers:
  - args:
    - --reporter.grpc.host-port=dns:///otel-trace-writer-collector-headless.observatorium-tools.svc:14250
    - --reporter.type=grpc
    - --agent.tags=pod.namespace=$(NAMESPACE),pod.name=$(POD)
    env:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: POD
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    image: quay.io/jaegertracing/jaeger-agent:1.57.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    name: jaeger-agent
    ports:
    - containerPort: 5778
      name: configs
    - containerPort: 6831
      name: jaeger-thrift
    - containerPort: 14271
      name: metrics
    readinessProbe:
      httpGet:
        path: /
        port: 14271
        scheme: HTTP
      initialDelaySeconds: 1
    resources:
      limits:
        cpu: 128m
        memory: 128Mi
      requests:
        cpu: 32m
        memory: 64Mi
  baseImage: quay.io/thanos/thanos
  blockConfig:
    blockDiscoveryStrategy: concurrent
    blockFilesConcurrency: 1
    blockMetaFetchConcurrency: 32
  featureGates:
    serviceMonitor:
      enable: false
  ignoreDeletionMarksDelay: 24h
  imagePullPolicy: IfNotPresent
  indexHeaderConfig:
    enableLazyReader: true
    lazyDownloadStrategy: lazy
    lazyReaderIdleTimeout: 5m
  logFormat: logfmt
  logLevel: info
  minTime: -90d
  objectStorageConfig:
    key: thanos.yaml
    name: thanos-objectstorage
    optional: false
  replicas: 3
  resourceRequirements:
    limits:
      cpu: 20m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 20Mi
  shardingStrategy:
    shards: 1
    type: block
  storageSize: 1Gi
  storeLimitsOptions:
    storeLimitsRequestSamples: 627040000
    storeLimitsRequestSeries: 1000000
  version: v0.37.2
status: {}
